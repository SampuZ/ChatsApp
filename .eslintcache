[{"D:\\Code\\ReactTest\\ChatsApp\\src\\index.js":"1","D:\\Code\\ReactTest\\ChatsApp\\src\\App.js":"2","D:\\Code\\ReactTest\\ChatsApp\\src\\reportWebVitals.js":"3","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatWindow.jsx":"4","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Home.jsx":"5","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Login.jsx":"6","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ContactList.jsx":"7","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatInputBox.jsx":"8","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatBox.jsx":"9","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Contacts.jsx":"10","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatBubble.jsx":"11"},{"size":519,"mtime":1643696187504,"results":"12","hashOfConfig":"13"},{"size":1319,"mtime":1650886574553,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1643696187548,"results":"15","hashOfConfig":"13"},{"size":3490,"mtime":1644487666453,"results":"16","hashOfConfig":"13"},{"size":1004,"mtime":1644305623876,"results":"17","hashOfConfig":"13"},{"size":1912,"mtime":1644222629246,"results":"18","hashOfConfig":"13"},{"size":1403,"mtime":1650886919525,"results":"19","hashOfConfig":"13"},{"size":1197,"mtime":1643696187461,"results":"20","hashOfConfig":"13"},{"size":2242,"mtime":1643696187451,"results":"21","hashOfConfig":"13"},{"size":945,"mtime":1648893365354,"results":"22","hashOfConfig":"13"},{"size":1882,"mtime":1643696187457,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1smjbmc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"D:\\Code\\ReactTest\\ChatsApp\\src\\index.js",[],["52","53"],"D:\\Code\\ReactTest\\ChatsApp\\src\\App.js",[],"D:\\Code\\ReactTest\\ChatsApp\\src\\reportWebVitals.js",[],"D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatWindow.jsx",["54"],"import React from \"react\";\r\nimport ChatInputBox from \"./ChatInputBox\";\r\nimport \"./chatstyle2.css\";\r\nimport ContactList from \"./ContactList\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ChatWindow extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\t\tthis.state={\r\n\t\t\tpendingMsg:null,\r\n\t\t\tcname:\"\"\r\n\t\t};\r\n\t\tthis.setPendingMessage=this.setPendingMessage.bind(this);\r\n\r\n\t\tconst url = 'ws://localhost:8081'\r\n\t\tconst connection = new WebSocket(url)\r\n\t\t\r\n\t\tconnection.onopen = () => {\r\n\t\t\tconnection.send('Client Online:-'+this.state.cname); \r\n\t\t}\r\n\t\t\r\n\t\tconnection.onerror = (error) => {\r\n\t\t\tconsole.log(`WebSocket error: ${error}`)\r\n\t\t}\r\n\t\t\r\n\t\tconnection.onmessage = (e) => {\r\n\t\t\tconsole.log(\"Server:-\"+e.data)\r\n\t\t}\r\n    }\r\n\r\n\tstatic getDerivedStateFromProps(nextProps, prevState){\r\n        console.log(\"Chat Token:\"+nextProps.getToken());\r\n\t\tlet tokenJson=JSON.parse(nextProps.getToken());\r\n        return {\r\n\t\t\tcname:tokenJson.cname\r\n\t\t}\r\n    }\r\n\r\n\tsetPendingMessage(msg){\r\n\t\tconsole.log(\"pending message=\"+msg);\r\n\t\tvar message={\r\n\t\t\ttype:\"Sent\",\r\n\t\t\tmsg: String(msg)\r\n\t\t}\r\n\t\tthis.setState({\r\n            pendingMsg:(message)\r\n        })\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n\t\t\t<p align=\"center\">\r\n\t\t\t<Link to={{pathname:\"/\"}}>Home</Link>\r\n\t\t\t<Link to={{pathname:\"/logout\"}}>Logout</Link>\r\n\t\t\t<br></br>\r\n\t\t\t<h2>Welcome {this.state.cname}</h2>\r\n\t\t\t</p>\r\n          <div class=\"container-fluid h-100\">\r\n\t\t\t<div class=\"row justify-content-center h-100\">\r\n\t\t\t\t<div class=\"col-md-4 col-xl-3 chat\"><div class=\"card mb-sm-3 mb-md-0 contacts_card\">\r\n\t\t\t\t\t<div class=\"card-header\">\r\n\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Search...\" name=\"\" class=\"form-control search\"/>\r\n\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t<span class=\"input-group-text search_btn\"><i class=\"fas fa-search\"></i></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"card-body contacts_body\">\r\n\t\t\t\t\t\t<ui class=\"contacts\">\r\n                            <ContactList/>\r\n\t\t\t\t\t\t</ui>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"card-footer\"></div>\r\n\t\t\t\t</div></div>\r\n\t\t\t\t<div class=\"col-md-8 col-xl-6 chat\">\r\n\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t<div class=\"card-header msg_head\">\r\n\t\t\t\t\t\t\t<div class=\"d-flex bd-highlight\">\r\n\t\t\t\t\t\t\t\t<div class=\"img_cont\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" class=\"rounded-circle user_img\"/>\r\n\t\t\t\t\t\t\t\t\t<span class=\"online_icon\"></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"user_info\">\r\n\t\t\t\t\t\t\t\t\t<span>ChatBox</span>\r\n\t\t\t\t\t\t\t\t\t<p>5 Messages</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"video_cam\">\r\n\t\t\t\t\t\t\t\t\t<span><i class=\"fas fa-video\"></i></span>\r\n\t\t\t\t\t\t\t\t\t<span><i class=\"fas fa-phone\"></i></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span id=\"action_menu_btn\"><i class=\"fas fa-ellipsis-v\"></i></span>\r\n\t\t\t\t\t\t\t<div class=\"action_menu\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li><i class=\"fas fa-user-circle\"></i> View profile</li>\r\n\t\t\t\t\t\t\t\t\t<li><i class=\"fas fa-users\"></i> Add to close friends</li>\r\n\t\t\t\t\t\t\t\t\t<li><i class=\"fas fa-plus\"></i> Add to group</li>\r\n\t\t\t\t\t\t\t\t\t<li><i class=\"fas fa-ban\"></i> Block</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"card-body msg_card_body\">\r\n\t\t\t\t\t\t<ChatBox pendingMsg={this.state.pendingMsg}/>\t\r\n                        </div>\r\n\t\t\t\t\t\t<ChatInputBox hasPendingMessage={this.setPendingMessage}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n        );\r\n    }\r\n};","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Home.jsx",[],"D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Login.jsx",["55"],"import React from 'react';\r\nimport { Link, Navigate   } from 'react-router-dom';\r\nimport \"./login.css\";\r\n\r\nasync function loginUser(credentials) {\r\n  console.log(JSON.stringify(credentials));\r\n  return fetch('http://localhost:8080/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n  .then(data => data.json())\r\n}\r\n\r\n\r\nexport default class Login extends React.Component {\r\n  \r\n    constructor(props){\r\n        super(props);\r\n        this.state = { redirect: null };\r\n        \r\n        if(props.logout==\"true\"){\r\n          this.props.setToken(\"\");\r\n          console.log(\"Redirect>\");\r\n          this.setState({ redirect: \"/\" });\r\n        }\r\n        this.userid=React.createRef();\r\n        this.passwd=React.createRef();        \r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const tokenJSON=await loginUser({\r\n          uid:this.userid.current.value,\r\n          pwd:this.passwd.current.value\r\n        });\r\n        console.log(\"Response:-\"+JSON.stringify(tokenJSON))\r\n        this.props.setToken(tokenJSON);\r\n        this.setState({ redirect: \"/chat\" });\r\n    }\r\n  \r\n  render(){\r\n    console.log(\"Redirect to \"+this.state.redirect);\r\n    if (this.state.redirect!==null) {\r\n      return <Navigate to={this.state.redirect} />\r\n    }\r\n    return(\r\n        <div align=\"center\">\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <label>\r\n            <p>Username</p>\r\n            <input type=\"text\" ref={this.userid} required/>\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            <p>Password</p>\r\n            <input type=\"password\" ref={this.passwd}/>\r\n          </label>\r\n          <div>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </form>\r\n         <Link to={{pathname:\"/\"}}>Home</Link>\r\n         </div>\r\n      );\r\n  }\r\n};","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ContactList.jsx",["56","57"],"D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatInputBox.jsx",[],"D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatBox.jsx",["58","59"],"import React from \"react\";\r\nimport \"./chatstyle2.css\";\r\nimport ChatBubble from \"./ChatBubble\";\r\n\r\n\r\nexport default class ChatBox extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let messages=[\r\n        //     {\r\n        //         \"type\":\"Recv\",\r\n        //         \"msg\":\"Hi, how are you?\"\r\n        //     },\r\n        //     {\r\n        //            \"type\":\"Sent\",\r\n        //            \"msg\":\"I am good, thank you for your chat template\"\r\n        //     },\r\n        //     {\r\n        //         \"type\":\"Recv\",\r\n        //         \"msg\":\"You are welcome\"\r\n        //     },\r\n        //    {\r\n        //        \"type\":\"Sent\",\r\n        //        \"msg\":\"I am looking for your next templates\"\r\n        //    },\r\n        //    {\r\n        //     \"type\":\"Recv\",\r\n        //     \"msg\":\"Ok, thank you-- good day\"\r\n        //    },\r\n        //    {\r\n        //        \"type\":\"Sent\",\r\n        //        \"msg\":\"Bye, see you Hello?\"\r\n        //    }\r\n        ];\r\n\r\n        this.state={\r\n            msg:(messages),\r\n            numofmsg:6,\r\n        };\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        let newMessage=(nextProps.pendingMsg);\r\n        console.log(\"newprops=\"+newMessage)\r\n        prevState.msg.map(\r\n            (item,index)=>{\r\n                console.log(\"item=\"+item)\r\n        });\r\n\r\n        if(newMessage!==null){\r\n            let newMsgList=prevState.msg;\r\n            let msgno=prevState.numofmsg;\r\n            console.log(\"pushing newmsg in \"+msgno);\r\n            if(!newMsgList.includes(newMessage))\r\n                newMsgList.push(newMessage);\r\n           \r\n            msgno+=1;\r\n            return({\r\n               msg:newMsgList,\r\n               numofmsg:msgno\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let msg_display=[]\r\n        this.state.msg.map((item,index)=>{\r\n            console.log(\">>>\"+JSON.stringify(item)+\"<<<\");\r\n            if(item!==null) {\r\n                if(item.msg!==\"\"){\r\n                    msg_display.push(<ChatBubble data={item}/>);\r\n                }   \r\n            }\r\n        })\r\n\r\n        return(\r\n        <div class=\"card-body msg_card_body\">\r\n            {msg_display}\r\n        </div>\r\n        );\r\n    };\r\n};","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\Contacts.jsx",["60"],"import React from \"react\";\r\nimport \"./chatstyle2.css\";\r\n\r\nexport default class Contacts extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\t\tthis.state={\r\n\t\t\tname:props.name\r\n\t\t}\r\n\t\tthis.activateContact=this.activateContact.bind(this);\r\n    }\r\n\r\n\tactivateContact(){\r\n\t\talert(this.state.name);\r\n\t}\r\n\r\n    render(){\r\n\t\t//  var statusIcon=\"\";\r\n\t\t// if(this.props.status==\"online\"){\r\n\t\t// \tstatusIcon=\"online_icon\";\r\n\t\t// }else{\r\n\t\t// \tstatusIcon=\"offline_icon\";\r\n\t\t// }\r\n\r\n        return(\r\n        <div>\r\n\t\t\t<div class=\"d-flex bd-highlight\" onClick={this.activateContact}>\r\n\t\t\t\t<div class=\"img_cont\">\r\n\t\t\t\t\t<img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" class=\"rounded-circle user_img\"/>\r\n\t\t\t\t\t<span class=\"online_icon\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"user_info\">\r\n\t\t\t\t\t<span>{this.props.name}</span>\r\n\t\t\t\t\t<p>{this.props.status}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        </div>\r\n        );\r\n    }\r\n};","D:\\Code\\ReactTest\\ChatsApp\\src\\ChatsApp\\ChatBubble.jsx",["61","62"],"import React from \"react\";\r\nexport default class ChatBubble extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let message=(props.data);\r\n        console.log(\"NEw MEssage=\"+JSON.stringify(message));\r\n        let msgtype=\"\";\r\n        let msgdata=\"\";\r\n        if(message!=null){\r\n            msgtype=message.type;\r\n            msgdata=message.msg;\r\n        }\r\n        let today = new Date(),\r\n        timestamp = today.getHours() + ':' + today.getMinutes();\r\n        console.log(timestamp);\r\n        this.state={\r\n           type:msgtype,\r\n           msg:msgdata,\r\n           timestamp:timestamp,\r\n           upload:0\r\n        };\r\n    }\r\n\r\n    render(){\r\n\r\n        let ChatBubble=(<div></div>);\r\n        if(this.state.type===\"Sent\"){\r\n            ChatBubble=(\r\n                <div class=\"d-flex justify-content-end mb-4\">\r\n                        <div class=\"msg_cotainer_send\">\r\n                            {this.state.msg}\r\n                            <span class=\"msg_time_send\">{this.state.timestamp}</span>\r\n                        </div>\r\n                        <div class=\"img_cont_msg\">\r\n                        <img src=\"\" class=\"rounded-circle user_img_msg\"/>\r\n                        </div>\r\n                </div>\r\n            );\r\n        }else if(this.state.type===\"Recv\"){\r\n            ChatBubble=(\r\n                <div class=\"d-flex justify-content-start mb-4\">\r\n                <div class=\"img_cont_msg\">\r\n                    <img src=\"\" class=\"rounded-circle user_img_msg\"/>\r\n                </div>\r\n                <div class=\"msg_cotainer\">\r\n                    {this.state.msg}\r\n                    <span class=\"msg_time\">{this.state.timestamp}</span>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n        \r\n\r\n        return(\r\n        <div>\r\n         {ChatBubble}\r\n        </div>\r\n        );\r\n    }\r\n};",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":85,"column":10,"nodeType":"69","endLine":85,"endColumn":113},{"ruleId":"70","severity":1,"message":"71","line":24,"column":24,"nodeType":"72","messageId":"73","endLine":24,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":12,"column":15,"nodeType":"76","messageId":"77","endLine":12,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":19,"column":34,"nodeType":"80","messageId":"81","endLine":19,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":47,"column":25,"nodeType":"80","messageId":"81","endLine":47,"endColumn":27},{"ruleId":"78","severity":1,"message":"79","line":69,"column":40,"nodeType":"80","messageId":"81","endLine":69,"endColumn":42},{"ruleId":"67","severity":1,"message":"68","line":30,"column":6,"nodeType":"69","endLine":30,"endColumn":109},{"ruleId":"67","severity":1,"message":"68","line":36,"column":25,"nodeType":"69","endLine":36,"endColumn":74},{"ruleId":"67","severity":1,"message":"68","line":44,"column":21,"nodeType":"69","endLine":44,"endColumn":70},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]